name: Build and Deploy Docker Image

on:
  push:
    tags:
      - 'v*'
    branches:
      - dev

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

jobs:
  build-and-push:
    if: ${{ vars.RUN_CICD == 'true' && (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image_tag: ${{ steps.image_tag.outputs.TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tag
        id: image_tag
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "TAG=dev" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "TAG=${VERSION}" >> $GITHUB_OUTPUT
          else
            echo "TAG=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker-flowFinder/Dockerfile.prod
          push: true
          tags: |
            ghcr.io/piaimarket-flow-finder/flow-finder-frontend:${{ steps.image_tag.outputs.TAG }}
            ghcr.io/piaimarket-flow-finder/flow-finder-frontend:latest

  deploy-dev:
    if: ${{ vars.RUN_CICD == 'true' && github.ref == 'refs/heads/dev' }}
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Apply k8s manifests
        run: |
          kubectl apply -n $NAMESPACE -f ./k8s/

      - name: Update deployment image
        run: |
          NAMESPACE=flow-finder-dev
          HOSTNAME=flow-finder-dev.kube-ext.isc.heia-fr.ch
          
          # Update deployment image
          kubectl set image deployment/flow-finder-frontend flow-finder-frontend=ghcr.io/piaimarket-flow-finder/flow-finder-frontend:dev -n $NAMESPACE

          # Update ingress host (patch directly)
          kubectl patch ingress flow-finder-ingress -n $NAMESPACE \
            --type=json \
            -p="[{'op': 'replace', 'path': '/spec/rules/0/host', 'value':'$HOSTNAME'}]"

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/flow-finder-frontend -n flow-finder-dev

  deploy-prod:
    if: ${{ vars.RUN_CICD == 'true' && startsWith(github.ref, 'refs/tags/v') }}
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Update deployment image
        run: |
          NAMESPACE=flow-finder
          HOSTNAME=flow-finder.kube-ext.isc.heia-fr.ch
          IMAGE_TAG=${{ needs.build-and-push.outputs.image_tag }}

          # Update deployment image
          kubectl set image deployment/flow-finder-frontend flow-finder-frontend=ghcr.io/piaimarket-flow-finder/flow-finder-frontend:$IMAGE_TAG -n $NAMESPACE

          # Update ingress host (patch directly)
          kubectl patch ingress flow-finder-ingress -n $NAMESPACE \
            --type=json \
            -p="[{'op': 'replace', 'path': '/spec/rules/0/host', 'value':'$HOSTNAME'}]"

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/flow-finder-frontend -n flow-finder
